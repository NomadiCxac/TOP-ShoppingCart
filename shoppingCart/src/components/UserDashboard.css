/* UserDashboard Container Styles */


.orderListContainer {
    position: relative;
    overflow-x: hidden; /* Ensures no horizontal scroll */
    overflow-y: auto; /* Allows vertical scrolling */
    background-color: rgb(255, 255, 255);
    color: #fff; /* Light text color for dark mode */
    min-height: 50vh;
    max-height: 56vh;
}


.ordersContainer {
    display: flex;
    flex-direction: column; /* Stack cards in a column */
    align-items: center; /* Center cards horizontally */
    overflow-y: auto; /* Allow vertical scrolling */
    max-height: 50%; /* Maximum height to fit three cards */
    gap: 1.25em; /* Space between cards */
    padding: 1.25em 0; /* Padding at top and bottom */
}



.orderIdContainer#modal {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-between;
}

.orderIdContainer > h3,
.orderIdContainer > h6 {
    margin-top: 0;
    padding-top: 0;
}

.orderConfirmationStatuses {
    display: flex;
    font-size: 12px;
    flex-direction: column;
    align-items: flex-start;
}

.orderItemsContainer#modal {
    display: flex;
    width: 100%;
    height: 100%;
}

.orderImages {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    margin-top: -1em;
    width: 100%;
}


.orderReviewContainer#modal { 
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    margin-top: 1em;
    color:   rgb(89, 74, 71);
}

.orderItemContainer#modal { 
    display: flex;
    justify-content: space-between;
    width: 100%;
    font-size: 0.875em;
    margin-bottom: 1.75em;
}

.orderItemContents#left,
.orderItemContents#right {
    display: flex;
}

.orderItemDescription#left {
    display: flex;
    flex-direction: column;
    margin-left: 1em;
}

.orderItemContents#right {
    font-size: 1em;
    font-weight: 600;
}

.nameOfItem {
    display: flex;
    align-items: flex-start;
    margin-top: 0;
    padding-top: 0;
}

.itemBreakdown {
    display: flex;
    font-size: 0.8em;
    padding-left: 0;
}


.orderSubtotal#modal {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    width: 100%;
    font-size: 1.1em;
    font-weight: 600;
    margin-top: -3em;
    color:   rgb(89, 74, 71);
}



.orderIcon {
    width: 4em;
    height: 4em;
}




/* Modal CSS below */


.modal-content {
    height: 85vh;
    display: flex;
    flex-direction: column;
}


.modalContentContainer {
    display: flex;
    height: 100%;
    width: 100%;
    color: black;
    border: 1px solid black;
}

.orderStepsContainer {
    display: flex;
    width: 100%;
    flex-direction: column;
    align-items: flex-start;
    padding-top: 1em;
    padding-left: 1em;
}

.StepTracker {
    margin-top: 0.5em;
}

.closeButtonContainer {
    display: flex;
    align-items: flex-start;
    justify-content: flex-start;
    width: 2em;
    height: 2em;
    z-index: 100;
}

.orderSummary#modal {
    width: 100%;
    background-color:  rgb(243, 235, 235);
    padding: 0.5em;
    margin-bottom: 1em;
    color: rgb(89, 74, 71);
}

.pickUpDateContainer {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.choosePickUpDateContainer {
    display: flex;
    width: 100%;
    margin-top: 1em;
    margin-bottom: -1em;
    margin-left: 1em;
    align-items: flex-start;
    justify-content: space-between;
    height: 18.75em;

}

#pickUpDateContainerTitle {
    display: flex;
}

.selectionContainer {
    display: flex;
    width: 100%;
    min-height: 17.75em;
    align-items: flex-start;
    justify-content: space-between;
}

.calendarContainer {
    margin-top: 0.5em;
    margin-left: 1em;
}


/* Adjustments for a fixed grid layout */
.timeGridContainer {
    display: grid;
    /* Define a fixed number of columns. For example, 6 columns. Adjust as needed. */
    grid-template-columns: repeat(5, 1fr);
    gap: 8px; /* Adjust the gap between items */
    max-width: 37.5em; /* Your desired maximum width */
    margin: auto; /* Center the grid if the container is wider */
    margin-right: 13em;
    margin-top: 0.9em;
}
  
.timeGridContainer > .timeButton {
    width: 8em;
    padding: 0.6em; /* Make padding smaller to reduce button size */
    padding-top: 0.5em;
    font-size: 1rem; /* Adjust font size for the smaller buttons */
    background-color: rgb(255, 185, 54); /* Example button color, adjust as needed */
    color: #222222; /* Button text color */
    border: none; /* Remove default button border */
    cursor: pointer; /* Change cursor to pointer on hover */
    text-align: center; /* Center the text inside the button */
}
  
.timeGridContainer > .timeButton:hover {
    background-color: rgb(255, 185, 54); /* Darker shade on hover, adjust as needed */
    color: rgb(255, 255, 255);
}
  
.react-datepicker__month-container > .react-datepicker__month > .react-datepicker__week > .react-datepicker__day--selected {
    background-color: rgb(255, 185, 54);
}




  .confirmPickUpDateContainer {
    height: 3.125em;
  }

  .confirmPickUpDateContainer > .confirmPickUpDateButton {
    font-size: medium;
    margin-bottom: 1em;
  }

  .confirmPickUpDateContainer > .confirmPickUpDateButton:hover {
    background-color: #1d9430; /* Example button color, adjust as needed */
    color: white; /* Button text color */
  }

  .confirmPickUpDateContainer > .confirmPickUpDateButton:disabled {
    background-color: #ccc; /* Light gray background for disabled state */
    cursor: not-allowed; /* Cursor indicates button is not clickable */
  }


.your-order-title {
    display: flex;
}

.close-button {
    display: inline-block;
    width: auto; /* Or you can set a specific width */
    height: auto; /* Or you can set a specific height, like 1em for proportion to the font size */
    font-size: 2.5em;
    line-height: 1;
    cursor: pointer;
    color: #333; /* Adjust color as needed */
    background: none;
    border: none;
    padding: 0;
    margin: 0;
  }
  
  /* Ensure the button does not inherit global styles */
  .close-button:focus {
    outline: none;
    color: red;
  }
  
  /* Optional: Add a hover effect */
  .close-button:hover {
    color: #ff0000; /* Adjust hover color as needed */
  }

  .status-paid {
    color: green;
  }
  
  .status-unpaid {
    color: red;
  }

  .signoutButton {
    color: rgb(89, 74, 71);
  }

  .signoutButton:hover {
    background-color: rgb(245, 238, 238);
  }

  /* Styling the scrollbar track */
.orderListContainer::-webkit-scrollbar {
    width: 10px; /* Adjust the width of the scrollbar */
}

/* Styling the scrollbar handle */
.orderListContainer::-webkit-scrollbar-thumb {
    /* background-color: rgb(153, 196, 135); */
    background-color: rgb(255, 185, 54);
    /* background-color:   rgb(89, 74, 71); */
    border-radius: 5px; /* Rounded corners of the scrollbar */
    /* border: 1px solid black; */
}

/* Styling the scrollbar track */
.corderListContainer::-webkit-scrollbar-track {
    background-color: rgb(245, 231, 231); /* Color of the scrollbar track */
}
